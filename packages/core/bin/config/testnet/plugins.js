module.exports = {
    "@arkecosystem/core-event-emitter": {},
    "@arkecosystem/core-logger-pino": {},
    "@arkecosystem/core-state": {},
    "@incentum/praxis-transactions": {
        enabled: true,
        network: 65,
        ethStartingBlock: process.env.PRAXIS_ETH_ADDRESS || 7968100,
        ethAddress: process.env.PRAXIS_ETH_ADDRESS,
        ethEndpoint: process.env.PRAXIS_ETH_ENDPOINT,
        arkGenesis: process.env.PRAXIS_ARK_GENESIS,
        arkWallet: process.env.PRAXIS_ARK_WALLET,
        arkAddress: process.env.PRAXIS_ARK_ADDRESS,
        arkEndpoint: process.env.PRAXIS_ARK_ENDPOINT,
        authorizedCoinSenderPassphrase: process.env.PRAXIS_COIN_PASSPHRASE,
        itum: process.env.PRAXIS_ITUM_PRICE,
        ethDiscount: process.env.PRAXIS_ETH_DISCOUNT,
        arkDiscount: process.env.PRAXIS_ARK_DISCOUNT,
        minPurchaseAmount: process.env.PRAXIS_MIN_PURCHASE,
        maxPurchaseAmount: process.env.PRAXIS_MAX_PURCHASE,
        authorizedCoinSenderPublicKey: process.env.PRAXIS_SENDER_PUBLICKEY,
    },
    "@arkecosystem/core-database-postgres": {
        connection: {
            host: process.env.CORE_DB_HOST || "localhost",
            port: process.env.CORE_DB_PORT || 5432,
            database: process.env.CORE_DB_DATABASE || `${process.env.CORE_TOKEN}_${process.env.CORE_NETWORK_NAME}`,
            user: process.env.CORE_DB_USERNAME || process.env.CORE_TOKEN,
            password: process.env.CORE_DB_PASSWORD || "password",
        },
    },
    "@arkecosystem/core-transaction-pool": {
        enabled: true,
        maxTransactionsPerSender: process.env.CORE_TRANSACTION_POOL_MAX_PER_SENDER || 300,
        allowedSenders: [],
        dynamicFees: {
            enabled: true,
            minFeePool: 1000,
            minFeeBroadcast: 1000,
            addonBytes: {
                transfer: 100,
                secondSignature: 250,
                delegateRegistration: 400000,
                vote: 100,
                multiSignature: 500,
                ipfs: 250,
                timelockTransfer: 500,
                multiPayment: 500,
                delegateResignation: 100,

                contractAction: 500,
                contractFromAction: 100,
                contractFromInstance: 100,
                contractStart: 500,
                matchSchemas: 100,
                saveSchemas: 500,
                saveTemplate: 500,
                searchTemplate: 100,
                searchInstance: 100,
                unusedOutputs: 100,
                accountToOutput: 100,
                outputToAccount: 100,
                coinToOutput: 100,
            },
        },
    },
    "@arkecosystem/core-p2p": {
        server: {
            port: process.env.CORE_P2P_PORT || 4000,
        },
        minimumNetworkReach: 5,
    },
    "@arkecosystem/core-blockchain": {},
    "@arkecosystem/core-wallet-api": {},
    "@arkecosystem/core-api": {
        enabled: !process.env.CORE_API_DISABLED,
        host: process.env.CORE_API_HOST || "0.0.0.0",
        port: process.env.CORE_API_PORT || 4003,
        whitelist: ["*"],
    },
    "@arkecosystem/core-webhooks": {
        enabled: process.env.CORE_WEBHOOKS_ENABLED,
        server: {
            host: process.env.CORE_WEBHOOKS_HOST || "0.0.0.0",
            port: process.env.CORE_WEBHOOKS_PORT || 4004,
            whitelist: ["127.0.0.1", "::ffff:127.0.0.1"],
        },
    },
    "@arkecosystem/core-forger": {},
    "@arkecosystem/core-exchange-json-rpc": {
        enabled: process.env.CORE_EXCHANGE_JSON_RPC_ENABLED,
        host: process.env.CORE_EXCHANGE_JSON_RPC_HOST || "0.0.0.0",
        port: process.env.CORE_EXCHANGE_JSON_RPC_PORT || 8080,
        allowRemote: false,
        whitelist: ["127.0.0.1", "::ffff:127.0.0.1"],
    },
    "@arkecosystem/core-snapshots": {},
};
