{
  "init": {
    "@arkecosystem/core-config": {}
  },
  "beforeCreate": {
    "@arkecosystem/core-logger": {
      "driver": "@arkecosystem/core-logger-winston"
    },
    "@arkecosystem/core-logger-winston": {
      "file": "~/.ark/logs/core/devnet",
      "levels": {
        "file": "debug",
        "console": "debug"
      }
    },
    "@arkecosystem/core-blockchain": {}
  },
  "beforeMount": {
    "@arkecosystem/core-database": {
      "driver": "@arkecosystem/core-database-sequelize",
      "snapshots": "~/.ark/snapshots"
    },
    "@arkecosystem/core-database-sequelize": {
      "uri": "sqlite:~/.ark/database/devnet.sqlite",
      "uri_1": "postgres://node:password@localhost:5432/ark_devnet",
      "dialect": "sqlite",
      "dialect_1": "postgres",
      "logging": false
    },
    "@arkecosystem/core-api-p2p": {
      "port": 4002,
      "remoteinterface": true
    },
    "@arkecosystem/core-transaction-pool-redis": {
      "enabled": false,
      "key": "ark/pool",
      "maxTransactionsPerSender": 5,
      "whiteList": [],
      "redis": {
        "host": "localhost",
        "port": 6379
      }
    }
  },
  "mounted": {
    "@arkecosystem/core-api-public": {
      "enabled": true,
      "port": 4003,
      "versions": {
        "default": 1,
        "valid": [
          1,
          2
        ]
      },
      "cache": {
        "enabled": false,
        "options": {
          "name": "redisCache",
          "engine": "catbox-redis",
          "host": "localhost",
          "port": 6379,
          "partition": "cache",
          "expiresIn": 60000
        }
      },
      "rateLimit": {
        "enabled": false,
        "limit": 300,
        "expires": 60000
      },
      "pagination": {
        "limit": 100,
        "include": [
          "/api/v2/blocks",
          "/api/v2/blocks/{id}/transactions",
          "/api/v2/blocks/search",
          "/api/v2/delegates",
          "/api/v2/delegates/{id}/blocks",
          "/api/v2/delegates/{id}/voters",
          "/api/v2/multisignatures",
          "/api/v2/peers",
          "/api/v2/signatures",
          "/api/v2/transactions",
          "/api/v2/transactions/search",
          "/api/v2/votes",
          "/api/v2/wallets",
          "/api/v2/wallets/top",
          "/api/v2/wallets/{id}/transactions",
          "/api/v2/wallets/{id}/transactions/received",
          "/api/v2/wallets/{id}/transactions/sent",
          "/api/v2/wallets/{id}/votes",
          "/api/v2/wallets/search"
        ]
      },
      "statistics": {
        "enabled": false
      }
    },
    "@arkecosystem/core-webhooks": {
      "enabled": true,
      "database": {
        "uri": "sqlite:~/.ark/database/webhooks.sqlite",
        "dialect": "sqlite",
        "logging": false
      },
      "redis": {
        "host": "localhost",
        "port": 6379
      },
      "api": {
        "port": 4004,
        "token": "$argon2id$v=19$m=4096,t=3,p=1$/sUhlZGQp/K+zGLlwWp5Kw$8aNVK5F6DU20zaA8WjBSge/xNf75793BcfBo/zj5Yxw",
        "pagination": {
          "limit": 100,
          "include": [
            "/api/webhooks"
          ]
        }
      },
      "events": [{
        "name": "forging.started",
        "description": "Emitted when the current delegate starts forging."
      }, {
        "name": "forging.stopped",
        "description": "Emitted when the current delegate stops forging."
      }, {
        "name": "forging.missing",
        "description": "Emitted when the current delegate is missing blocks."
      }, {
        "name": "block.forged",
        "description": "Emitted when a blocks is forged."
      }, {
        "name": "block.removed",
        "description": "Emitted when a blocks is removed."
      }, {
        "name": "transaction.forged",
        "description": "Emitted when a transaction is forged."
      }, {
        "name": "transaction.removed",
        "description": "Emitted when a transaction is removed."
      }, {
        "name": "transaction.expired",
        "description": "Emitted when a transaction expired."
      }, {
        "name": "vote.created",
        "description": "Emitted when a vote is created."
      }, {
        "name": "vote.removed",
        "description": "Emitted when a vote is removed."
      }, {
        "name": "peer.added",
        "description": "Emitted when a peer is added."
      }, {
        "name": "peer.removed",
        "description": "Emitted when a peer is removed."
      }, {
        "name": "peer.banned",
        "description": "Emitted when a peer is banned."
      }]
    }
  }
}
